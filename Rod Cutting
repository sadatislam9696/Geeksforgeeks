

//////     https://www.geeksforgeeks.org/cutting-a-rod-dp-13/

/***   Bismillahir Rahmanir Rahim   ***/

#include<bits/stdc++.h>
using namespace std;

#define     nn          '\n'
#define     ss          second
#define     ff          first
#define     sp(d, n)    fixed << setprecision(d) << n
#define     srt(v)      sort(v.begin(),v.end());
#define     rsrt(v)     sort(v.rbegin(),v.rend());
#define     rev(v)      reverse(v.begin(),v.end());
#define     mem(a, x)   memset(a, x, sizeof a)

using ll =  long long;
using ld =  long double;
using ull = unsigned long long;
const ld pi = acos(-1.0);
template <typename T>
using minHeap = priority_queue<T, vector<T>, greater<T>>;

int dx[6] = {0, 1, -1, 0, 0};
int dy[6] = {0, 0, 0, 1, -1};

const int M = 1e9 + 7;
const int N = 3e4 + 9;

int d[N], a[N];

void find_ans(int n){
    int max_value = 0;
    for(int i = 1; i <= n; i++){
        max_value = max(max_value, a[i]  + d[n - i]);
    }
    d[n] = max_value;
}
void solution(){
    int n;
    cin >> n;

    for(int i = 1; i <= n; i++){
        cin >> a[i];
    }

    for(int i = 1; i <= n; i++){
        find_ans(i);
    }

    for(int i = 1; i <= n; i++){
        cout << d[i] << ' ';
    }
}

int32_t main(){

    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);cout.tie(nullptr);

    int t = 1, c = 1;
    //cin >> t;
    //cin.ignore();
    while(t--){
        //cout << "Case " << c++ << ": ";
        solution();
    }
    return 0;
}

/***

8
1 5 6 9 11 12 18 16

8
0 5 8 9 10 17 17 20

**/
