

/***   Bismillahir Rahmanir Rahim   ***/

#include<bits/stdc++.h>
using namespace std;

#define     nn          '\n'
#define     ss          second
#define     ff          first
#define     sp(d, n)    fixed << setprecision(d) << n
#define     srt(v)      sort(v.begin(),v.end());
#define     rsrt(v)     sort(v.rbegin(),v.rend());
#define     rev(v)      reverse(v.begin(),v.end());
#define     mem(a, x)   memset(a, x, sizeof a)

using ll =  long long;
using ld =  long double;
using ull = unsigned long long;
const ld pi = acos(-1.0);
template <typename T>
using minHeap = priority_queue<T, vector<T>, greater<T>>;

int dx[6] = {0, 1, -1, 0, 0};
int dy[6] = {0, 0, 0, 1, -1};

const int M = 1e9 + 7;
const int N = 3e4 + 9;

void solution(){
    int n, w;
    cin >> n >> w;
    int profit[n + 1], weight[n + 1];
    for(int i = 1; i <= n; i++) cin >> profit[i];
    for(int i = 1; i <= n; i++) cin >> weight[i];

    double per[n + 1];
    for(int i = 1; i <= n; i++){
        per[i] = (profit[i] / (1.0 * weight[i]));
    }

    vector<pair<double, pair<int, int>>>v;
    for(int i = 1; i <= n; i++){
        v.push_back({per[i], {weight[i], profit[i]}});
    }

    sort(v.rbegin(), v.rend());
    double ans = 0;
    for(auto it : v){
        int x = it.ss.ff;
        if(x <= w){
            ans += (1.0 * it.ss.ss);
            w -= x;
        }
        else{
            ans += (1.0 * w * it.ff);
            break;
        }
    }
    cout << ans << nn;
}

int32_t main(){

    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);cout.tie(nullptr);

    int t = 1, c = 1;
    //cin >> t;
    //cin.ignore();
    while(t--){
        //cout << "Case " << c++ << ": ";
        solution();
    }
    return 0;
}
